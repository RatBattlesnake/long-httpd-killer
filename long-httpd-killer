#!/bin/bash
#
# Copyright (c) 2012 - S. Zachariah Sprackett <zac@sprackett.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms are permitted
# provided that the above copyright notice and this paragraph are
# duplicated in all such forms and that any documentation,
# advertising materials, and other materials related to such
# distribution and use acknowledge that the software was developed
# by S. Zachariah Spracket.  S. Zachariah Sprackett
# may not be used to endorse or promote products derived
# from this software without specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS' AND WITHOUT ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

IFS=$'\n'
TIMEOUT=250
ADDRESS="127.0.0.1"
DEBUG=0
SYSLOG=0
SKIP_PROC=0
KILL_CMD="kill"

usage() {
  echo "$0 -a <address> -t <timeout>" >&2
  echo >&2
  echo "  -a Address: default 127.0.0.1" >&2
  echo "  -t Timeout in Seconds: default 250" >&2
  echo >&2
  echo "  -d Enable debug mode.  Print errors but don't kill anything." >&2
  echo "  -f Use kill -9 instead of just kill." >&2
  echo "  -p Skip reading CWD from /proc." >&2
  echo "  -s Log to syslog instead of STDOUT." >&2
  exit 1
}

while getopts "a:t:dfphs" opt; do
  case $opt in
    a)
      ADDRESS=$OPTARG
      ;;
    d)
      DEBUG=1
      ;;
    f)
      KILL_CMD="kill -9"
      ;;
    t)
      TIMEOUT=$OPTARG
      ;;
    h)
      usage
      ;;
    p)
      SKIP_PROC=1
      ;;
    s)
      SYSLOG=1
      ;;
    \?)
      usage
      ;;
    esac
done

if [ "x$DEBUG" != "x0" ]; then
  echo Debug enabled.  Logging to STDOUT and not killing anything.
fi

for i in $(echo y | w3m http://$ADDRESS/server-status -dump 2>&1 | grep -E "^[0-9]+-[0-9]+" \
  | awk -v t="$TIMEOUT" '$4 ~ /[GW]/ { if ($6 >= t) {
    out = sprintf("%s Srv: %s Acc: %s M: %s CPU: %s Ss: %s: Req: %s Conn: %s Child: %s Slot: %s Client: %s VHost: %s",
      $2, $1, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12);
    for (c=13; c<=NF; c++) { out = sprintf("%s %s", out, $c) };
    print out|"sort -n"
  }}'); do
  PID=$(echo $i | awk '{ print $1}')
  WORKDIR=""
  if [ ! -z "$SKIP_PROC" -a -d /proc/$PID/cwd ]; then
    WORKDIR="Cwd: $(readlink -e /proc/$PID/cwd)"
  fi

  if [ "x$DEBUG" = "x0" ]; then
    if [ "x$SYSLOG" != "x0" ]; then
      echo $KILL_CMD - PID: $i $WORKDIR | logger -p local5.notice -t $0
    else
      echo $KILL_CMD - PID: $i $WORKDIR
    fi
    $KILL_CMD $PID
  else
    echo would $KILL_CMD - PID: $i $WORKDIR
  fi
done
